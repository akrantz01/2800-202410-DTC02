[project]
name = "2800-202410-dtc02"
version = "1.0.0"
description = "Team DTC02 is developing VeritasAI to help people who read online articles determine the bias and accuracy of the content, and whether it was generated with AI, by implementing AI language models to analyze the text"
authors = [{ name = "DTC-02" }]

requires-python = ">=3.10"

dependencies = [
  "flask>=3.0.3",
  "functions-framework>=3.5.0",
  "pydantic>=2.7.1",
  "python-dotenv>=1.0.1",
  "firebase-admin>=6.5.0",
  "google-cloud-storage>=2.16.0",
  "ibm-watson>=8.1.0",
  "ibm-cloud-sdk-core>=3.20.0",
  "google-cloud-pubsub>=2.21.1",
  "google-cloud-logging>=3.10.0",
  "click>=8.1.7",
  "cloup>=3.0.5",
  "requests>=2.32.2",
]

[build-system]
requires = ["pdm-backend", "pdm-polylith-workspace"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
dev = ["ruff>=0.4.3", "pytest>=8.2.0", "polylith-cli>=1.6.0", "pytest-mock>=3.14.0"]

[tool.pdm.scripts]
lint = { cmd = "ruff check" }
"lint:fix" = { cmd = "ruff check --fix" }
format = { cmd = "ruff format --check" }
"format:fix" = { cmd = "ruff format" }
test = { cmd = "pytest" }

analysis-manager.cmd = "functions-framework --target=handler --source projects/analysis-manager/main.py"
analysis-manager.env = { PORT = "8000" }
tone-analyzer.cmd = "functions-framework --target=handler --source projects/tone-analyzer/main.py"
tone-analyzer.env = { PORT = "8001" }
bias-analyzer.cmd = "functions-framework --target=handler --source projects/bias-analyzer/main.py"
bias-analyzer.env = { PORT = "8002" }

[tool.polylith.bricks]
"bases/veritasai/analysis_manager" = "veritasai/analysis_manager"
"bases/veritasai/bias_analyzer" = "veritasai/bias_analyzer"
"bases/veritasai/tone_analyzer" = "veritasai/tone_analyzer"
"components/veritasai/articles" = "veritasai/articles"
"components/veritasai/authentication" = "veritasai/authentication"
"components/veritasai/bias" = "veritasai/bias"
"components/veritasai/cache" = "veritasai/cache"
"components/veritasai/config" = "veritasai/config"
"components/veritasai/cors" = "veritasai/cors"
"components/veritasai/firebase" = "veritasai/firebase"
"components/veritasai/input_validation" = "veritasai/input_validation"
"components/veritasai/logging" = "veritasai/logging"
"components/veritasai/protocol" = "veritasai/protocol"
"components/veritasai/pubsub" = "veritasai/pubsub"
"components/veritasai/tone" = "veritasai/tone"
"components/veritasai/watson" = "veritasai/watson"

[tool.pyright]
extraPaths = ["bases", "components"]

[tool.pytest.ini_options]
markers = [
  "function: mark a test as requiring an instance of a handler function",
  "cloud_event: specify the content of a cloud event",
]

[tool.ruff]
line-length = 100
indent-width = 4

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true

[tool.ruff.lint]
select = ["A", "B", "E4", "E501", "E7", "E9", "F", "G", "I", "LOG", "N", "T20", "RUF"]

[tool.ruff.lint.per-file-ignores]
"development/**.py" = ["T20"]
